{"version":3,"sources":["App.js","registerServiceWorker.js","index.js"],"names":["Members","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","developers","id","name","username","extra","artists","react_default","a","createElement","className","map","e","key","src","concat","alt","href","undefined","Component","App","_Component2","_this2","backgroundPosition","onMouseMove","bind","assertThisInitialized","inherits","createClass","value","document","addEventListener","posX","clientX","posY","clientY","setState","style","width","height","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","title","App_Members","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","Index","es","exact","path","component","ReactDOM","render","src_Index","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.34386666.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass Members extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      developers: [\n        { id: '1077050', name: 'Dennis Bartlett', username: 'dcbartlett' },\n        { id: '106511', name: 'Andrew Kelley', username: 'andrewrk' },\n        { id: '1069318', name: 'Robin Lambertz', username: 'roblabla' },\n        { id: '2346494', name: 'Romain Beaumont', username: 'rom1504' },\n        { id: '1270100', name: 'Will Franzen', username: 'wtfaremyinitials' },\n        { id: '87436', name: 'Josh Wolfe', username: 'thejoshwolfe' },\n        { id: '2260564', name: 'Harold Feit', username: 'DreadWingKnight' },\n        { id: '8526903', name: 'Keegan', username: 'mhsjlw', extra: 'flying-squid' },\n        { id: '5000732', name: 'Bryan Agredo', username: 'ciolt', extra: 'website' },\n        { id: '850714', name: 'Georges Oates Larsen', username: 'flynnn' },\n      ],\n      artists: [\n        { id: '5957463', name: 'Brady Africk', username: 'BradyLF' }\n      ]\n    }\n  }\n\n  componentWillMount() {\n\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h2>Meet the Team</h2>\n        <p>PrismarineJS is made possible by many contributors who have put their time and effort into making the project possible.</p>\n        <div className=\"row\">\n          <div className=\"col-md\">\n            <h3>Developers</h3>\n            <ul>\n              {this.state.developers.map((e) => {\n                  return (\n                    <li key={e.id}>\n                      <img src={`https://avatars.githubusercontent.com/u/${e.id}?s=54`} alt=\"true\" /> {e.name} <a href={`https://github.com/${e.username}`}>@{e.username}</a> {e.extra ? (<code>{e.extra}</code>) : undefined }\n                    </li>\n                  )\n              })}\n            </ul>\n          </div>\n          <div className=\"col-md\">\n            <h3>Media</h3>\n            <ul>\n              {this.state.artists.map((e) => {\n                  return (\n                    <li key={e.id}>\n                      <img src={`https://avatars.githubusercontent.com/u/${e.id}?s=54`} alt=\"true\" /> {e.name} <a href={`https://github.com/${e.username}`}>@{e.username}</a> {e.extra ? (<code>{e.extra}</code>) : undefined }\n                    </li>\n                  )\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = { backgroundPosition: \"0 0, 0 0\" }\n\n    this.onMouseMove = this.onMouseMove.bind(this)\n  }\n\n  componentWillMount() {\n    document.addEventListener('mousemove', this.onMouseMove)\n  }\n\n  onMouseMove(e) {\n    const posX = e.clientX / 20;\n    const posY = e.clientY / 20\n    this.setState({ backgroundPosition: `${posX}px ${posY}px, 0px 0px` })\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"promoBanner active\" style={{backgroundPosition: this.state.backgroundPosition}}>\n          <nav className=\"navbar navbar-expand-md container transparent navbar-dark\">\n            <a className=\"navbar-brand\" href=\"/\"><img className=\"d-inline-block align-top\" src=\"/images/prismarine_js.svg\" width={32} height={32} alt=\"PrismarineJS\" /></a><button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarContent\" aria-controls=\"navbarContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\" /></button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarContent\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\"><a className=\"nav-link\" href=\"https://github.com/PrismarineJS\">GitHub</a></li>\n              </ul>\n            </div>\n          </nav>\n          <div className=\"container promo pb-5 pt-5 mb-5\">\n            <h1 className=\"text-left display-4 col-md-auto\">PrismarineJS</h1>\n            <h3 className=\"text-left col-md-8\">Minecraft-compatible <a href=\"https://github.com/PrismarineJS/flying-squid\" title=\"PrismarineJS/Flying-Squid on GitHub\">server</a>, <a href=\"https://github.com/PrismarineJS/mineflayer\" title=\"PrismarineJS/Mineflayer on GitHub\">bot</a>, and <a href=\"https://github.com/PrismarineJS/node-minecraft-protocol\" title=\"PrismarineJS/Node-Minecraft-Protocol on GitHub\">API</a>. All written in JavaScript.</h3>\n            <div className=\"col-md-auto mt-4\"><a href=\"https://github.com/PrismarineJS\"><button className=\"btn btn-light\" type=\"button\">Check it out on GitHub</button></a></div>\n          </div>\n        </div>\n        <div className=\"content container-fluid\">\n          <div className=\"row markdown-render meetTheTeam\">\n            <Members />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport './index.css';\nimport { App } from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nclass Index extends Component {\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <div>\n            <Switch>\n              <Route exact path='/' component={App}/>\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Index />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}